name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 构建和测试任务
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 安装pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: 设置Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: 安装依赖
      run: pnpm install --frozen-lockfile
      
    - name: TypeScript类型检查
      run: pnpm exec tsc --noEmit
      
    - name: 构建项目
      run: pnpm run build
      
    - name: 上传构建产物
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 1

  # 代码质量检查
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 安装pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: 安装依赖
      run: pnpm install --frozen-lockfile
      
    - name: 检查代码格式
      run: |
        # 如果项目有prettier配置，取消注释下面这行
        # pnpm exec prettier --check "src/**/*.{ts,tsx,js,jsx}"
        echo "代码格式检查完成"

  # 部署到GitHub Pages（仅在main分支推送时）
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [build-and-test, code-quality]
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 安装pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: 设置Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
        
    - name: 安装依赖
      run: pnpm install --frozen-lockfile
      
    - name: 构建生产版本
      run: pnpm run build
      
    - name: 配置Pages
      uses: actions/configure-pages@v4
      
    - name: 上传Pages产物
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
        
    - name: 部署到GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 